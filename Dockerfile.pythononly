FROM centos:8

RUN dnf group install -y "Development Tools"
RUN dnf install -y epel-release
RUN dnf install -y dnf-plugins-core
RUN dnf config-manager --set-enabled powertools
RUN dnf -y install python38 python38-devel httpd httpd-devel git cmake gcc gcc-c++ wget \
    libarchive bison flex gcc-gfortran
RUN dnf -y install eigen3-devel zlib-devel libxml2-devel swig cairo-devel
RUN dnf -y install mariadb mariadb-devel subversion cvs tcsh texlive texlive-multirow mailx java-1.8.0-openjdk \
    mesa-libGLU mesa-libOSMesa glx-utils

# remove any caching
RUN dnf clean all

# force using bash shell
SHELL ["/bin/bash", "-c"]

# setup access to private repositories
ARG SSH_PRIVATE_KEY
RUN mkdir /root/.ssh/
RUN echo "${SSH_PRIVATE_KEY}" > /root/.ssh/id_rsa
RUN chmod 600 /root/.ssh/id_rsa
RUN touch /root/.ssh/known_hosts
RUN ssh-keyscan github.com >> ~/.ssh/known_hosts

ENV ONEDEP_PATH=/wwpdb/onedep

# setup a venv
ENV VENV=/venv
ENV PATH=$VENV/bin:$PATH

# install inchi
RUN wget -O inchi.rpm https://download-ib01.fedoraproject.org/pub/epel/7/x86_64/Packages/i/inchi-1.0.4-4.el7.x86_64.rpm
RUN rpm -Uvh inchi.rpm

# install openbabel
# RUN wget -O openbabel-2.3.2.tar.gz http://sourceforge.net/projects/openbabel/files/openbabel/2.3.2/openbabel-2.3.2.tar.gz/download
RUN wget -O openbabel-2.3.2.tar.gz https://github.com/openbabel/openbabel/archive/refs/tags/openbabel-2-3-2.tar.gz
RUN tar -xvf openbabel-2.3.2.tar.gz
RUN cd openbabel-openbabel-2-3-2 \
    && cat ./include/openbabel/shared_ptr.h | sed -e 's/__GNUC__ == 4/__GNUC__ >= 4/g' > ./include/openbabel/shared_ptr.h.tmp \
    && mv ./include/openbabel/shared_ptr.h ./include/openbabel/shared_ptr.h__orig \
    && mv ./include/openbabel/shared_ptr.h.tmp ./include/openbabel/shared_ptr.h \
    && cat ./CMakeLists.txt | sed -e '0,/if(NOT MSVC)/s//set(CMAKE_CXX_FLAGS  "${CMAKE_CXX_FLAGS} -Wno-error -std=c++03")\nset(CMAKE_C_FLAGS  "${CMAKE_C_FLAGS} -Wno-error")\n\nif(NOT MSVC)/g' > CMakeLists.txt.tmp \
    && mv ./CMakeLists.txt ./CMakeLists.txt__orig \
    && mv ./CMakeLists.txt.tmp ./CMakeLists.txt
RUN mkdir build && cd build && cmake ../openbabel-openbabel-2-3-2 && make && make install


# setup venv
RUN python3 -m venv $VENV
RUN pip install --no-cache-dir --upgrade setuptools pip
RUN pip config --site set global.no-cache-dir false
RUN pip install wheel
RUN pip install wwpdb.utils.config

# for running apache with this version of python
RUN pip install mod-wsgi
RUN mod_wsgi-express install-module > /etc/httpd/conf.modules.d/02-wsgi.conf

# access to content server
ARG CS_USER
ARG CS_PW
ARG CS_URL

# locations for checkouts
ENV TOP_WWPDB_WEBAPPS_DIR=$ONEDEP_PATH/source/onedep-webfe/webapps
ENV RO_RESOURCE_PATH=$ONEDEP_PATH/resources_ro

WORKDIR $ONEDEP_PATH/onedep_admin
COPY . .

# build-dev means this builds the latest development release with --edit installations of packages
#RUN python scripts/RunUpdate.py --skip-taxdb --skip-schema --skip-toolvers --build-dev |& tee $ONEDEP_PATH/python_install.log

# For building production system
RUN python scripts/RunUpdate.py --skip-taxdb --skip-schema --skip-toolvers |& tee $ONEDEP_PATH/python_install.log

WORKDIR $ONEDEP_PATH